(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{531:function(t,e,s){"use strict";s.r(e);var r=s(15),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-宏任务和微任务是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-宏任务和微任务是什么"}},[t._v("#")]),t._v(" 1 宏任务和微任务是什么")]),t._v(" "),s("p",[t._v("首先，我们要先了解下 Js 。js 是一种单线程语言，简单的说就是：只有一条通道，那么在任务多的情况下，就会出现拥挤的情况，这种情况下就产生了 ‘多线程’ ，但是这种 “多线程” 是通过单线程模仿的，也就是假的。那么就产生了同步任务和异步任务。")]),t._v(" "),s("p",[t._v("js 同步任务和异步任务")]),t._v(" "),s("p",[t._v("ES6 规范中，microtask 称为 jobs，macrotask 称为 task"),s("br"),t._v("\n 宏任务是由宿主发起的，而微任务由 JavaScript 自身发起。")]),t._v(" "),s("p",[t._v("在 ES3 以及以前的版本中，JavaScript 本身没有发起异步请求的能力，也就没有微任务的存在。在 ES5 之后，JavaScript 引入了 Promise，这样，不需要浏览器，JavaScript 引擎自身也能够发起异步任务了。")]),t._v(" "),s("p",[t._v("s\t宏任务（macrotask）\t微任务（microtask）"),s("br"),t._v("\n谁发起的\t宿主（Node、浏览器）\tJS 引擎"),s("br"),t._v("\n具体事件\t1. script (可以理解为外层同步代码) 2. setTimeout/setInterval3. UI rendering/UI 事件 4. postMessage，MessageChannel5. setImmediate，I/O（Node.js）\t1. Promise2. MutaionObserver3. Object.observe（已废弃；Proxy 对象替代）4. process.nextTick（Node.js）"),s("br"),t._v("\n谁先运行\t后运行\t先运行"),s("br"),t._v("\n会触发新一轮 Tick 吗\t会\t不会")]),t._v(" "),s("h2",{attrs:{id:"_2-宏任务、微任务有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-宏任务、微任务有哪些"}},[t._v("#")]),t._v(" 2 宏任务、微任务有哪些")]),t._v(" "),s("p",[t._v("宏任务：1. script (可以理解为外层同步代码) 2. setTimeout/setInterval3. UI rendering/UI 事件 4. postMessage，MessageChannel5. setImmediate，I/O（Node.js）")]),t._v(" "),s("p",[t._v("微任务：1. Promise2.process.nextTick（Node.js） 3. Object.observe（已废弃；Proxy 对象替代）4. MutaionObserver")]),t._v(" "),s("h2",{attrs:{id:"_3-宏任务、微任务是怎么执行的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-宏任务、微任务是怎么执行的"}},[t._v("#")]),t._v(" 3 宏任务、微任务是怎么执行的")]),t._v(" "),s("p",[t._v("执行顺序：先执行同步代码，遇到异步宏任务则将异步宏任务放入宏任务队列中，遇到异步微任务则将异步微任务放入微任务队列中，当所有同步代码执行完毕后，再将异步微任务从队列中调入主线程执行，微任务执行完毕后再将异步宏任务从队列中调入主线程执行，一直循环直至所有任务执行完毕。")]),t._v(" "),s("p",[t._v("这里容易产生一个"),s("strong",[t._v("错误的")]),t._v("认识：就是微任务先于宏任务执行。实际上是先执行同步任务，异步任务有宏任务和微任务两种，先将宏任务添加到宏任务队列中，将宏任务里面的微任务添加到微任务队列中。所有同步执行完之后执行异步，再将异步微任务从队列中调入主线程执行，微任务执行完毕后再将异步宏任务从队列中调入主线程执行。之后就一直循环...")])])}),[],!1,null,null,null);e.default=a.exports}}]);