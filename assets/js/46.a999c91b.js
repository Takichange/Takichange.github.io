(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{532:function(n,t,v){"use strict";v.r(t);var _=v(15),r=Object(_.a)({},(function(){var n=this,t=n.$createElement,v=n._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[v("p",[n._v("1、找到端口名（3004）")]),n._v(" "),v("p",[n._v('netstat -aon | findstr "3004"'),v("br"),n._v("\n2、找到 pid")]),n._v(" "),v("p",[n._v('tasklist|findstr "6412"')]),n._v(" "),v("p",[n._v("3、关闭端口")]),n._v(" "),v("p",[n._v("taskkill /pid 6412 -t -f")]),n._v(" "),v("p",[n._v("面向对象编程"),v("br"),n._v("\n 1 封装"),v("br"),n._v("\n 2 继承"),v("br"),n._v("\n 3 多态"),v("br"),n._v("\n继承是实现多态的基础，多态是继承的目的"),v("br"),n._v("\n --- 多态提供了 “接口与实现分离”。"),v("br"),n._v("\n多态不但能改变程序的组织架构和可读性，更便利与开发出 “可扩充” 的程序。"),v("br"),n._v("\n继承是多态的基础，多态是继承的目的。"),v("br"),n._v("\n合理的运用基于类继承的多态、基于接口继承的多态和基于模版的多态，能增强程序的简洁性、灵活性、可维护性、可重用性和可扩展性")]),n._v(" "),v("p",[n._v("函数式编程"),v("br"),n._v("\n 1 头等函数 在该语言中是一等公民，可当数据类型一样使用"),v("br"),n._v("\n 2 高阶函数 函数可作为参数传递，可作为返回值输出")]),n._v(" "),v("p",[n._v("JS 应用开发常用的两种编程范式："),v("br"),n._v("\n原型继承（js 的 OOP 是通过原型继承实现的）"),v("br"),n._v("\n函数式编程（closures，First Class Functions， Lambdas）")])])}),[],!1,null,null,null);t.default=r.exports}}]);